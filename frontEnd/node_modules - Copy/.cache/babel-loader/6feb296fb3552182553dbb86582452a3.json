{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\soft-dev\\\\project\\\\Ahair\\\\src\\\\components\\\\MultipleImageUpload.js\";\nimport React from 'react';\n\nclass MultipleImageUpload extends React.Component {\n  constructor() {\n    super();\n\n    this.hideSaved = () => {\n      this.setState({\n        isSaved: false\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault(); // console.log(this.state.imageFile)\n\n      if (!this.state.isSaved) {\n        this.props.getFile(this.state.imageFile, this.state.imagePreview, this.state.imageUrl);\n      }\n    };\n\n    this.handleChange = event => {\n      event.preventDefault();\n      let reader = new FileReader();\n      let file = event.target.files[0];\n\n      reader.onloadend = () => {\n        this.setState(prevState => ({\n          imageFile: prevState.imageFile.concat(file),\n          imagePreview: prevState.imagePreview.concat(reader.result),\n          imageUrl: prevState.imageUrl.concat(URL.createObjectURL(file))\n        }));\n      };\n\n      this.setState({\n        isSaved: true\n      });\n\n      if (file && file.type.match('image.*')) {\n        reader.readAsDataURL(file);\n      } // console.log(this.state)\n\n    };\n\n    this.state = {\n      imageFile: [],\n      imagePreview: [],\n      imageUrl: [],\n      isSaved: false\n    }; // this.deleteImage = this.deleteImage.bind(this)\n  } // deleteImage = event => {\n  //     this.setState({\n  //         imageFile: this.state.imageFile.pop(event.target.key),\n  //         imagePreview: this.state.imagePreview.pop(event.target.key),\n  //         imageUrl: this.state.imageUrl.pop(event.target.key)\n  //     });\n  //     console.log(this.state)\n  // }\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container_mutiplefile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, React.createElement(\"div\", {\n      className: \"wrap_multipreview\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, (this.state.imagePreview || []).map(file => React.createElement(\"img\", {\n      className: \"multiple_image_preview\",\n      src: file,\n      alt: \"\",\n      key: file.toString() // onClick = {this.deleteImage}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }\n    }))), React.createElement(\"form\", {\n      className: \"input_image_box\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, React.createElement(\"input\", {\n      className: \"multiple_file_input\",\n      type: this.state.imageFile.length < 5 ? \"file\" : \"none\",\n      id: \"image_file\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }), React.createElement(\"div\", {\n      className: \"wrap_button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, React.createElement(\"button\", {\n      className: this.state.isSaved ? \"showsave_button\" : \"hidsave_button\",\n      type: \"submit\",\n      onClick: this.hideSaved,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    }, \"Save\"))));\n  }\n\n}\n\nexport default MultipleImageUpload;","map":{"version":3,"sources":["C:/Users/DELL/Desktop/soft-dev/project/Ahair/src/components/MultipleImageUpload.js"],"names":["React","MultipleImageUpload","Component","constructor","hideSaved","setState","isSaved","handleSubmit","event","preventDefault","state","props","getFile","imageFile","imagePreview","imageUrl","handleChange","reader","FileReader","file","target","files","onloadend","prevState","concat","result","URL","createObjectURL","type","match","readAsDataURL","render","map","toString","length"],"mappings":"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","sourcesContent":["import React from 'react'\r\n\r\nclass MultipleImageUpload extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            imageFile: [],\r\n            imagePreview: [],\r\n            imageUrl: [],\r\n            isSaved: false\r\n        }\r\n        // this.deleteImage = this.deleteImage.bind(this)\r\n    }\r\n\r\n    // deleteImage = event => {\r\n    //     this.setState({\r\n    //         imageFile: this.state.imageFile.pop(event.target.key),\r\n    //         imagePreview: this.state.imagePreview.pop(event.target.key),\r\n    //         imageUrl: this.state.imageUrl.pop(event.target.key)\r\n    //     });\r\n    //     console.log(this.state)\r\n    // }\r\n    \r\n    hideSaved = () => {\r\n        this.setState({ isSaved: false})\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault()\r\n        // console.log(this.state.imageFile)\r\n        if(!this.state.isSaved){\r\n            this.props.getFile(this.state.imageFile, this.state.imagePreview, this.state.imageUrl )\r\n        }\r\n    }\r\n\r\n    handleChange = event => {\r\n        event.preventDefault();\r\n\r\n        let reader = new FileReader();\r\n        let file = event.target.files[0];\r\n        \r\n\r\n        reader.onloadend = () => {\r\n            this.setState((prevState) => ({ \r\n                imageFile: prevState.imageFile.concat(file), \r\n                imagePreview: prevState.imagePreview.concat(reader.result),\r\n                imageUrl: prevState.imageUrl.concat(URL.createObjectURL(file))\r\n            }));\r\n        }\r\n        this.setState({ isSaved: true })\r\n        if (file && file.type.match('image.*')) {\r\n            reader.readAsDataURL(file);\r\n        }\r\n        // console.log(this.state)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className = \"container_mutiplefile\">\r\n                \r\n                <div className = \"wrap_multipreview\">\r\n                    {(this.state.imagePreview || []).map(file => (\r\n                        <img \r\n                            className = \"multiple_image_preview\"\r\n                            src = {file} \r\n                            alt = \"\" \r\n                            key = {file.toString()}\r\n                            // onClick = {this.deleteImage}\r\n                        />\r\n                    ))}\r\n                </div>\r\n\r\n                <form className=\"input_image_box\" onSubmit={this.handleSubmit}>\r\n                    <input \r\n                        className = \"multiple_file_input\"\r\n                        type = {this.state.imageFile.length < 5? \"file\" : \"none\"}\r\n                        id = \"image_file\"\r\n                        onChange = {this.handleChange}\r\n                    />\r\n                    <div className=\"wrap_button\">\r\n                        <button className={this.state.isSaved? \"showsave_button\": \"hidsave_button\"} type=\"submit\" onClick={this.hideSaved}>\r\n                            Save\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MultipleImageUpload; "]},"metadata":{},"sourceType":"module"}