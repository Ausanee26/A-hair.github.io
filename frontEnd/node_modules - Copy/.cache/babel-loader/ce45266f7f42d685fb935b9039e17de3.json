{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\soft-dev\\\\project\\\\myfirstreact\\\\src\\\\test.js\";\nimport React from \"react\"; // import { MDBInput, MDBBtn, MDBCol } from \"mdbreact\";\n// import { BrowserRouter as Router, withRouter } from \"react-router-dom\";\n\nconst usersJson = {\n  description: \"Login and passwords of users\",\n  users: {\n    testUser: {\n      password: \"test\",\n      type: \"test\"\n    }\n  }\n};\n\nclass Login extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userName: \"\",\n      password: \"\",\n      usersJson: {}\n    };\n\n    this.getLoginData = (value, type) => this.setState({\n      [type]: value\n    });\n\n    this.onFormSubmit = e => {\n      e.preventDefault();\n      const {\n        usersJson,\n        userName,\n        password\n      } = this.state;\n      const filterUserName = Object.keys(usersJson.users).filter(e => e === userName);\n\n      if (filterUserName.length > 0 && usersJson.users[userName].password === password) {\n        this.props.history.push(\"test\");\n        window.localStorage.setItem(\"user\", JSON.stringify(usersJson.users[userName]));\n      } else {\n        alert(\"Wrong login or password\");\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      usersJson\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, React.createElement(MDBCol, {\n      size: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, React.createElement(\"form\", {\n      onSubmit: this.onFormSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, React.createElement(\"p\", {\n      className: \"h5 text-center mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, \"Sign in\"), React.createElement(\"div\", {\n      className: \"grey-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, React.createElement(MDBInput, {\n      label: \"Type your email\",\n      icon: \"envelope\",\n      group: true,\n      type: \"text\",\n      validate: true,\n      error: \"wrong\",\n      success: \"right\",\n      getValue: value => this.getLoginData(value, \"userName\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }\n    }), React.createElement(MDBInput, {\n      label: \"Type your password\",\n      icon: \"lock\",\n      group: true,\n      type: \"password\",\n      validate: true,\n      getValue: value => this.getLoginData(value, \"password\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }\n    })), React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, React.createElement(MDBBtn, {\n      type: \"submit\",\n      onClick: this.onFormSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }, \"Login\")))));\n  }\n\n}\n\nexport default withRouter(Login);","map":{"version":3,"sources":["C:/Users/DELL/Desktop/soft-dev/project/myfirstreact/src/test.js"],"names":["React","usersJson","description","users","testUser","password","type","Login","Component","state","userName","getLoginData","value","setState","onFormSubmit","e","preventDefault","filterUserName","Object","keys","filter","length","props","history","push","window","localStorage","setItem","JSON","stringify","alert","componentDidMount","render","withRouter"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,WAAW,EAAE,8BADG;AAEhBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,QAAQ,EAAE,MADF;AAERC,MAAAA,IAAI,EAAE;AAFE;AADL;AAFS,CAAlB;;AAUA,MAAMC,KAAN,SAAoBP,KAAK,CAACQ,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAClCC,KADkC,GAC1B;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENL,MAAAA,QAAQ,EAAE,EAFJ;AAGNJ,MAAAA,SAAS,EAAE;AAHL,KAD0B;;AAAA,SAUlCU,YAVkC,GAUnB,CAACC,KAAD,EAAQN,IAAR,KACb,KAAKO,QAAL,CAAc;AACZ,OAACP,IAAD,GAAQM;AADI,KAAd,CAXgC;;AAAA,SAelCE,YAfkC,GAenBC,CAAC,IAAI;AAClBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAM;AAAEf,QAAAA,SAAF;AAAaS,QAAAA,QAAb;AAAuBL,QAAAA;AAAvB,UAAoC,KAAKI,KAA/C;AACA,YAAMQ,cAAc,GAAGC,MAAM,CAACC,IAAP,CAAYlB,SAAS,CAACE,KAAtB,EAA6BiB,MAA7B,CACrBL,CAAC,IAAIA,CAAC,KAAKL,QADU,CAAvB;;AAGA,UACEO,cAAc,CAACI,MAAf,GAAwB,CAAxB,IACApB,SAAS,CAACE,KAAV,CAAgBO,QAAhB,EAA0BL,QAA1B,KAAuCA,QAFzC,EAGE;AACA,aAAKiB,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,MAAxB;AACAC,QAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CACE,MADF,EAEEC,IAAI,CAACC,SAAL,CAAe5B,SAAS,CAACE,KAAV,CAAgBO,QAAhB,CAAf,CAFF;AAID,OATD,MASO;AACLoB,QAAAA,KAAK,CAAC,yBAAD,CAAL;AACD;AACF,KAjCiC;AAAA;;AAMlCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKlB,QAAL,CAAc;AAAEZ,MAAAA;AAAF,KAAd;AACD;;AA0BD+B,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,QAAQ,EAAE,KAAKlB,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AACE,MAAA,KAAK,EAAC,iBADR;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,KAAK,MAHP;AAIE,MAAA,IAAI,EAAC,MAJP;AAKE,MAAA,QAAQ,MALV;AAME,MAAA,KAAK,EAAC,OANR;AAOE,MAAA,OAAO,EAAC,OAPV;AAQE,MAAA,QAAQ,EAAEF,KAAK,IAAI,KAAKD,YAAL,CAAkBC,KAAlB,EAAyB,UAAzB,CARrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAWE,oBAAC,QAAD;AACE,MAAA,KAAK,EAAC,oBADR;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,KAAK,MAHP;AAIE,MAAA,IAAI,EAAC,UAJP;AAKE,MAAA,QAAQ,MALV;AAME,MAAA,QAAQ,EAAEA,KAAK,IAAI,KAAKD,YAAL,CAAkBC,KAAlB,EAAyB,UAAzB,CANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,CAFF,EAsBE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,KAAKE,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CAtBF,CADF,CADF,CADF;AAkCD;;AArEiC;;AAwEpC,eAAemB,UAAU,CAAC1B,KAAD,CAAzB","sourcesContent":["import React from \"react\";\r\n// import { MDBInput, MDBBtn, MDBCol } from \"mdbreact\";\r\n// import { BrowserRouter as Router, withRouter } from \"react-router-dom\";\r\n\r\nconst usersJson = {\r\n  description: \"Login and passwords of users\",\r\n  users: {\r\n    testUser: {\r\n      password: \"test\",\r\n      type: \"test\"\r\n    }\r\n  }\r\n};\r\n\r\nclass Login extends React.Component {\r\n  state = {\r\n    userName: \"\",\r\n    password: \"\",\r\n    usersJson: {}\r\n  };\r\n  componentDidMount() {\r\n    this.setState({ usersJson });\r\n  }\r\n\r\n  getLoginData = (value, type) =>\r\n    this.setState({\r\n      [type]: value\r\n    });\r\n\r\n  onFormSubmit = e => {\r\n    e.preventDefault();\r\n    const { usersJson, userName, password } = this.state;\r\n    const filterUserName = Object.keys(usersJson.users).filter(\r\n      e => e === userName\r\n    );\r\n    if (\r\n      filterUserName.length > 0 &&\r\n      usersJson.users[userName].password === password\r\n    ) {\r\n      this.props.history.push(\"test\");\r\n      window.localStorage.setItem(\r\n        \"user\",\r\n        JSON.stringify(usersJson.users[userName])\r\n      );\r\n    } else {\r\n      alert(\"Wrong login or password\");\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <MDBCol size=\"3\">\r\n          <form onSubmit={this.onFormSubmit}>\r\n            <p className=\"h5 text-center mb-4\">Sign in</p>\r\n            <div className=\"grey-text\">\r\n              <MDBInput\r\n                label=\"Type your email\"\r\n                icon=\"envelope\"\r\n                group\r\n                type=\"text\"\r\n                validate\r\n                error=\"wrong\"\r\n                success=\"right\"\r\n                getValue={value => this.getLoginData(value, \"userName\")}\r\n              />\r\n              <MDBInput\r\n                label=\"Type your password\"\r\n                icon=\"lock\"\r\n                group\r\n                type=\"password\"\r\n                validate\r\n                getValue={value => this.getLoginData(value, \"password\")}\r\n              />\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <MDBBtn type=\"submit\" onClick={this.onFormSubmit}>\r\n                Login\r\n              </MDBBtn>\r\n            </div>\r\n          </form>\r\n        </MDBCol>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Login);"]},"metadata":{},"sourceType":"module"}